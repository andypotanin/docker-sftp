name: Build and Test

on:
  pull_request:
    branches: [ master, latest ]
  push:
    branches: [ master, latest ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        npm install --save-dev jest eslint eslint-plugin-node
    
    - name: Run linting
      run: npm run lint
    
    - name: Build test image
      run: |
        docker build \
          --tag usabilitydynamics/k8-container-gate:test \
          --build-arg NODE_ENV=test \
          -f Dockerfile.udx .
    
    - name: Set up test environment
      run: |
        # Create test directories
        mkdir -p /home/runner/.ssh
        mkdir -p authorized_keys.d
        chmod 700 /home/runner/.ssh
        
        # Generate SSH key pair
        ssh-keygen -t rsa -b 4096 -f /home/runner/.ssh/id_rsa -N ""
        chmod 600 /home/runner/.ssh/id_rsa
        
        # Set up authorized_keys for container
        cp /home/runner/.ssh/id_rsa.pub authorized_keys.d/test-user
        chmod 644 authorized_keys.d/test-user
    
    - name: Run unit tests
      run: npm test
    
    - name: Run integration tests
      run: |
        # Start test container with proper permissions
        docker run -d --name test-container \
          -e NODE_ENV=test \
          -e TEST_MODE=true \
          -e TEST_SSH_USER=test-user \
          -e DEBUG=ssh:* \
          -v $(pwd)/authorized_keys.d:/etc/ssh/authorized_keys.d:ro \
          -p 2222:22 \
          usabilitydynamics/k8-container-gate:test
        
        # Wait for container and SSH to be ready
        sleep 30
        docker logs test-container
        
        # Verify SSH daemon is running
        docker exec test-container ps aux | grep sshd
        
        # Verify authorized_keys is mounted
        docker exec test-container ls -la /etc/ssh/authorized_keys.d
        
        # Run tests with correct permissions
        TEST_SSH_HOST=localhost \
        TEST_SSH_PORT=2222 \
        TEST_SSH_USER=test-user \
        TEST_SSH_KEY_PATH=~/.ssh/id_rsa \
        DEBUG=ssh:* \
        npm run test:integration
    
    - name: Cleanup
      if: always()
      run: |
        docker rm -f test-container || true
        rm -f authorized_keys
