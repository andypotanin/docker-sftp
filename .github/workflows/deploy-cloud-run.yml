name: Deploy to Cloud Run

on:
  # Manual deployment only
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag to deploy'
        required: true
        default: 'latest'

env:
  CLOUD_RUN_PROJECT_ID: destinationpickleball-com-8173
  REGION: us-central1
  SERVICE_NAME: sftp-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Add permissions needed for auth
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set Tag
      id: version
      run: |
        echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
    
    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
        service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'
        token_format: 'access_token'
        access_token_lifetime: '3600s'
        create_credentials_file: true
        export_environment_variables: true
        
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        version: '>= 363.0.0'
        project_id: ${{ env.CLOUD_RUN_PROJECT_ID }}

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker gcr.io
        
    - name: Copy image to GCR
      env:
        REGISTRY: usabilitydynamics
        IMAGE_NAME: k8-container-gate
        GCR_HOSTNAME: gcr.io
      run: |
        # Pull from Docker Hub
        docker pull ${REGISTRY}/${IMAGE_NAME}:${{ steps.version.outputs.TAG }}
        
        # Tag for GCR
        docker tag ${REGISTRY}/${IMAGE_NAME}:${{ steps.version.outputs.TAG }} \
          ${GCR_HOSTNAME}/${{ env.CLOUD_RUN_PROJECT_ID }}/${IMAGE_NAME}:${{ steps.version.outputs.TAG }}
        
        # Push to GCR
        docker push ${GCR_HOSTNAME}/${{ env.CLOUD_RUN_PROJECT_ID }}/${IMAGE_NAME}:${{ steps.version.outputs.TAG }}

    - name: Generate Cloud Run Config
      env:
        DOCKER_REGISTRY: gcr.io/${{ env.CLOUD_RUN_PROJECT_ID }}
        IMAGE_NAME: k8-container-gate
        IMAGE_TAG: ${{ steps.version.outputs.TAG }}
        GCP_SERVICE_ACCOUNT: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}
        GITHUB_TOKEN_SECRET_NAME: github-access-token
      run: |
        # Replace variables in cloud-run.yml
        envsubst < src/configs/cloud-run.yml > /tmp/cloud-run-config.yml
    
    - name: Deploy to Cloud Run
      run: |
        gcloud beta run services replace /tmp/cloud-run-config.yml \
          --platform=managed \
          --region=${{ env.REGION }} \
          --project=${{ env.CLOUD_RUN_PROJECT_ID }}
        
        # Get service URL
        echo "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format='value(status.url)')" >> $GITHUB_OUTPUT
    
    - name: Show Service URL
      run: |
        echo "Service URL: ${{ steps.deploy.outputs.SERVICE_URL }}"
