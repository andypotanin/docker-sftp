name: 🐳 Docker Image Builder

# Purpose: Builds and publishes multi-arch Docker images to Docker Hub
# Trigger: On push to master and pull requests
# Output: Latest and versioned Docker images on Docker Hub

on:
  push:
    branches: [ master ]
    paths:
      - 'Dockerfile*'
      - 'package.json'
      - '.github/workflows/docker-build.yml'
      - 'src/**'
      - 'bin/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'Dockerfile*'
      - 'package.json'
      - 'src/**'
      - 'bin/**'

env:
  REGISTRY: docker.io
  IMAGE_NAME: usabilitydynamics/k8-container-gate
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build-and-push:
    name: 🏗️ Build Multi-Arch Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📝 Get Version from package.json
        id: package_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: 🔧 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🏗️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: 🔑 Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 🏷️ Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ steps.package_version.outputs.version }}
            type=raw,value=v${{ steps.package_version.outputs.version }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long

      - name: 🚀 Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.udx
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.package_version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
