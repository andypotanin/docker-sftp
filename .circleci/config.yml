defaults: &defaults
  working_directory: /rabbit-ssh
  docker:
    - image: google/cloud-sdk:alpine
  environment:
    TARGET: rabbit-ssh

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run: mkdir -p workspace
      - run: echo -n "$CIRCLE_BUILD_NUM-$(git rev-parse --short HEAD)" > workspace/_tag
      - run:
          name: Set IMAGE_REPO ENV Var
          command: |
            echo "export IMAGE_REPO=gcr.io/${GOOGLE_PROJECT_ID}" >> $BASH_ENV
            echo "export IMAGE_BRANCH=$(echo $CIRCLE_BRANCH | tr -s '/' '-' | tr '[:upper:]' '[:lower:]' | tr -cd '[[:alnum:]].-')" >> $BASH_ENV
            echo "export IMAGE_TAG=$(cat workspace/_tag)" >> $BASH_ENV
            source $BASH_ENV
      - run: echo "Building $IMAGE_REPO/$TARGET:$(cat workspace/_tag)"
      - setup_remote_docker
      - run:
          name: Add apk
          command: |
            apk add --no-cache gettext docker  
      - run:
          name: Store Service Account
          command: echo ${GCLOUD_SERVICE_KEY} > workspace/gcloud-service-key.json
      - run: 
          name: Set gcloud auth
          command: |
            gcloud auth activate-service-account --key-file=workspace/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run:
          name: Parse CI files
          command: |
            envsubst < ci/deployment.yml > workspace/k8sdeploy.yml
            envsubst < ci/service.yml > workspace/k8ssvc.yml
      - persist_to_workspace:
          root: workspace
          paths:
            - gcloud-service-key.json
            - _tag
            - k8sdeploy.yml
            - k8ssvc.yml
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t $IMAGE_REPO/$TARGET:$(cat workspace/_tag) .
      - run: 
          name: Push image to Google GCR
          command: |
            gcloud auth configure-docker --quiet
            docker images          
            docker push $IMAGE_REPO/$TARGET:$(cat workspace/_tag)
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar $IMAGE_REPO/$TARGET:$(cat workspace/_tag)
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: 
          name: Set gcloud auth
          command: |
            gcloud auth activate-service-account --key-file=/tmp/workspace/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run: 
          name: Install kubectl
          command: |
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME} --region us-central1 --project rabbit-cdmsqarskcacnbpe
            gcloud --quiet components install kubectl
      - run: 
          name: Deploy to K8s
          command: |
            kubectl -n ${GKE_NAMESPACE} apply -f /tmp/workspace/k8ssvc.yml
            kubectl -n ${GKE_NAMESPACE} apply -f /tmp/workspace/k8sdeploy.yml
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build