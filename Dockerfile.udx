# Docker SFTP Gateway
# This Dockerfile builds a container that provides SFTP access to Kubernetes pods
#
# Base Image: node:23.5-alpine

FROM node:23.5-alpine

LABEL version="0.9.0" \
      maintainer="UDX <team@udx.io>" \
      vendor="UDX" \
      description="K8-native SSH/SFTP gateway with GitHub auth and flexible state management"

# Set environment variables
ENV NODE_ENV=production \
    KUBECTL_VERSION=v1.28.3

# Install system dependencies
RUN apk update && \
    apk add --no-cache \
        openssh \
        openssh-server \
        curl \
        bash \
        git \
        sudo \
        netcat-openbsd

# Install kubectl
RUN ARCH=$(case $(uname -m) in x86_64) echo "amd64" ;; aarch64) echo "arm64" ;; *) echo "amd64" ;; esac) && \
    curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/${ARCH}/kubectl" && \
    chmod +x kubectl && \
    mv kubectl /usr/local/bin/ && \
    echo "Installed kubectl version:" && \
    kubectl version --client=true --output=yaml

# Setup SSH and user
RUN mkdir -p \
        /home/udx/.kube \
        /etc/ssh \
        /etc/ssh/authorized_keys.d \
        /var/log \
        /var/run/sshd \
        /run/sshd \
    && ssh-keygen -A \
    && echo "PasswordAuthentication no" >> /etc/ssh/sshd_config \
    && echo "ChallengeResponseAuthentication no" >> /etc/ssh/sshd_config \
    && echo "PermitRootLogin no" >> /etc/ssh/sshd_config \
    && adduser -D -h /home/udx -s /bin/bash udx \
    && echo "udx ALL=(ALL) NOPASSWD: /usr/sbin/sshd" >> /etc/sudoers.d/udx \
    && chown -R udx:udx /home/udx \
    && chmod 755 /etc/ssh \
    && chmod 755 /etc/ssh/authorized_keys.d \
    && chmod 755 /var/log \
    && chown -R udx:udx /var/log \
    && chmod 777 /etc/ssh/authorized_keys.d

# Set working directory and switch to non-root user
WORKDIR /home/udx
USER udx

# Copy package files
COPY package*.json ./

# Install Node.js dependencies
RUN npm ci --only=production

# Copy application files
COPY --chown=udx:udx . .

# Expose ports
EXPOSE 22 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD nc -z localhost 22 || exit 1

# Start SSH daemon and application
CMD ["/bin/bash", "-c", "sudo /usr/sbin/sshd && npm start"]
